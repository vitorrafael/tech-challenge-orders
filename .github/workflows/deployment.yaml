name: "CD - Build Infra & Deployment"

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

env:
  AWS_REGION_DEFAULT: us-east-1
  AWS_ECR_REPOSITORY: tech-challenge-lanchonete/orders
  AWS_ECR_REGISTRY: 045628470274.dkr.ecr.us-east-1.amazonaws.com
  EKS_CLUSTER_NAME: tech-challenge-lanchonete
  HELM_RELEASE_NAME: orders

jobs:
  terraform-ecr:
    name: "Terraform AWS Elastic Container Registry"
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION_DEFAULT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform -chdir=infra/aws init

      - name: Terraform Apply
        run: terraform -chdir=infra/aws apply -auto-approve -input=false

  tag:
    name: "Bump version and push tag"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Bump Version and Push Tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}

  docker-build-and-push:
    name: "Docker - Build & Push to ECR"
    needs:
      - tag
      - terraform-ecr
    runs-on: ubuntu-latest
    env:
      TAG: ${{ needs.tag.outputs.new_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION_DEFAULT }}

      - name: Login To Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Image Name
        id: build-image-name
        run: |
          echo "IMAGE_NAME=${{ env.AWS_ECR_REGISTRY }}/${{ env.AWS_ECR_REPOSITORY }}:${{ env.TAG }}" >> "$GITHUB_OUTPUT"

      - name: Build & Tag Image
        env:
          IMAGE_NAME: ${{ steps.build-image-name.outputs.IMAGE_NAME }}
        run: |
          docker build -t $IMAGE_NAME .

      - name: Push Image
        if: github.ref == 'refs/heads/main'
        env:
          IMAGE_NAME: ${{ steps.build-image-name.outputs.IMAGE_NAME }}
        run: |
          docker push $IMAGE_NAME

    outputs:
      PUSHED_TAG: ${{ needs.tag.outputs.new_tag }}

  helm:
    name: Install/Upgrade Helm Chart
    runs-on: ubuntu-latest
    needs: docker-build-and-push

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION_DEFAULT }}

      - name: Connect to AWS EKS Cluster
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION_DEFAULT }}  

      - name: Install Helm
        uses: azure/setup-helm@v4.2.0

      - name: Get Helm Repository
        run: helm repo add tcl https://fiap-8soat-g6.github.io/k8s-infrastructure

      - name: Install or Upgrade Helm Chart
        env:
          TAG: ${{ needs.docker-build-and-push.outputs.PUSHED_TAG }}
        run: |
          helm upgrade --install $HELM_RELEASE_NAME tcl/microservice \
            -f infra/chart-values/aws-values.yaml \
            --set image.tag=$TAG